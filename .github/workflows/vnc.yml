name: VNC with FRPC Tunnel & Fallback DE

on: [push]

jobs:
  vnc-frp:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download and install FRPC first
        run: |
          wget https://github.com/fatedier/frp/releases/download/v0.63.0/frp_0.63.0_linux_amd64.tar.gz
          tar -xzf frp_0.63.0_linux_amd64.tar.gz
          sudo mv frp_0.63.0_linux_amd64/frpc /usr/local/bin/
          chmod +x /usr/local/bin/frpc
          frpc --version

      - name: Install Desktop Environments and VNC dependencies
        run: |
          sudo apt update
          sudo apt install -y xfce4 xfce4-goodies tigervnc-standalone-server xterm twm dbus-x11

      - name: Set VNC password
        run: |
          mkdir -p ~/.vnc
          echo "password" | vncpasswd -f > ~/.vnc/passwd
          chmod 600 ~/.vnc/passwd

      - name: Create fallback xstartup script
        run: |
          mkdir -p ~/.vnc
          cat > ~/.vnc/xstartup <<'EOF'
          #!/bin/sh
          export XKL_XMODMAP_DISABLE=1
          unset SESSION_MANAGER
          unset DBUS_SESSION_BUS_ADDRESS
          dbus-launch --exit-with-session &

          if command -v startxfce4 >/dev/null 2>&1; then
            startxfce4 &
            sleep 10
            if pgrep -x "xfce4-session" >/dev/null; then
              exit 0
            fi
          fi

          if command -v xterm >/dev/null 2>&1; then
            xterm &
            sleep 10
            if pgrep -x "xterm" >/dev/null; then
              exit 0
            fi
          fi

          if command -v twm >/dev/null 2>&1; then
            twm &
            sleep 10
            if pgrep -x "twm" >/dev/null; then
              exit 0
            fi
          fi

          echo "No window manager could be started, exiting"
          exit 1
          EOF
          chmod +x ~/.vnc/xstartup

      - name: Start VNC server
        run: |
          vncserver :1 -geometry 1280x800 -depth 24

      - name: Create frpc.ini
        run: |
          cat > frpc.ini <<EOF
          [common]
          server_addr = ${{ secrets.IP }}
          server_port = 1234

          [vnc]
          type = tcp
          local_ip = 127.0.0.1
          local_port = 5901
          remote_port = 15900
          EOF

      - name: Show frpc.ini (debug)
        run: cat frpc.ini

      - name: Start frpc and block forever
        run: |
          echo "VNC is now exposed via FRP at ${{ secrets.IP }}:15900"
          frpc -c frpc.ini
